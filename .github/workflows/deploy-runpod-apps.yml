name: Deploy RunPod Applications

on:
  push:
    branches: [ main ]
    paths:
      - 'seedvr2/**'
      - 'infinitetalk/**'
      - '.github/workflows/deploy-runpod-apps.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'seedvr2/**'
      - 'infinitetalk/**'
  workflow_dispatch:
    inputs:
      app:
        description: 'Choose which app to deploy'
        required: true
        type: choice
        options:
          - all
          - seedvr2
          - infinitetalk

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      seedvr2: ${{ steps.filter.outputs.seedvr2 }}
      infinitetalk: ${{ steps.filter.outputs.infinitetalk }}
      deploy-all: ${{ steps.check.outputs.deploy-all }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            seedvr2:
              - 'seedvr2/**'
            infinitetalk:
              - 'infinitetalk/**'

      - name: Check if should deploy all
        id: check
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            if [[ "${{ github.event.inputs.app }}" == "all" ]]; then
              echo "deploy-all=true" >> $GITHUB_OUTPUT
            else
              echo "deploy-all=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "deploy-all=false" >> $GITHUB_OUTPUT
          fi

  deploy-seedvr2:
    needs: detect-changes
    if: |
      needs.detect-changes.outputs.seedvr2 == 'true' ||
      needs.detect-changes.outputs.deploy-all == 'true' ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.app == 'seedvr2')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push SeedVR2 Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./seedvr2
          push: true
          tags: |
            ${{ env.DOCKER_USERNAME }}/seedvr2:latest
            ${{ env.DOCKER_USERNAME }}/seedvr2:${{ github.sha }}
          cache-from: type=registry,ref=${{ env.DOCKER_USERNAME }}/seedvr2:buildcache
          cache-to: type=registry,ref=${{ env.DOCKER_USERNAME }}/seedvr2:buildcache,mode=max

      - name: Deploy notification for SeedVR2
        if: success() && github.ref == 'refs/heads/main'
        run: |
          echo "✅ Successfully built and pushed SeedVR2 Docker image"
          echo "Docker image: ${{ env.DOCKER_USERNAME }}/seedvr2:${{ github.sha }}"
          echo "Latest: ${{ env.DOCKER_USERNAME }}/seedvr2:latest"
          echo ""
          echo "Deploy to RunPod:"
          echo "1. Go to https://www.runpod.io/console/serverless/user/templates"
          echo "2. Create/Update template with image: ${{ env.DOCKER_USERNAME }}/seedvr2:latest"
          echo "3. Create/Update endpoint using the template"

  deploy-infinitetalk:
    needs: detect-changes
    if: |
      needs.detect-changes.outputs.infinitetalk == 'true' ||
      needs.detect-changes.outputs.deploy-all == 'true' ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.app == 'infinitetalk')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push InfiniteTalk Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./infinitetalk
          push: true
          tags: |
            ${{ env.DOCKER_USERNAME }}/infinitetalk-runpod:latest
            ${{ env.DOCKER_USERNAME }}/infinitetalk-runpod:${{ github.sha }}
          cache-from: type=registry,ref=${{ env.DOCKER_USERNAME }}/infinitetalk-runpod:buildcache
          cache-to: type=registry,ref=${{ env.DOCKER_USERNAME }}/infinitetalk-runpod:buildcache,mode=max

      - name: Deploy notification for InfiniteTalk
        if: success() && github.ref == 'refs/heads/main'
        run: |
          echo "✅ Successfully built and pushed InfiniteTalk Docker image"
          echo "Docker image: ${{ env.DOCKER_USERNAME }}/infinitetalk-runpod:${{ github.sha }}"
          echo "Latest: ${{ env.DOCKER_USERNAME }}/infinitetalk-runpod:latest"
          echo ""
          echo "Deploy to RunPod:"
          echo "1. Go to https://www.runpod.io/console/serverless/user/templates"
          echo "2. Create/Update template with image: ${{ env.DOCKER_USERNAME }}/infinitetalk-runpod:latest"
          echo "3. Create/Update endpoint using the template"

  summary:
    needs: [detect-changes, deploy-seedvr2, deploy-infinitetalk]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Deployment Summary
        run: |
          echo "## 🚀 Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [[ "${{ needs.deploy-seedvr2.result }}" == "success" ]]; then
            echo "### ✅ SeedVR2" >> $GITHUB_STEP_SUMMARY
            echo "- Status: Deployed successfully" >> $GITHUB_STEP_SUMMARY
            echo "- Image: \`${{ env.DOCKER_USERNAME }}/seedvr2:latest\`" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
          elif [[ "${{ needs.deploy-seedvr2.result }}" == "skipped" ]]; then
            echo "### ⏭️ SeedVR2" >> $GITHUB_STEP_SUMMARY
            echo "- Status: Skipped (no changes detected)" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
          elif [[ "${{ needs.deploy-seedvr2.result }}" == "failure" ]]; then
            echo "### ❌ SeedVR2" >> $GITHUB_STEP_SUMMARY
            echo "- Status: Failed" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
          fi

          if [[ "${{ needs.deploy-infinitetalk.result }}" == "success" ]]; then
            echo "### ✅ InfiniteTalk" >> $GITHUB_STEP_SUMMARY
            echo "- Status: Deployed successfully" >> $GITHUB_STEP_SUMMARY
            echo "- Image: \`${{ env.DOCKER_USERNAME }}/infinitetalk-runpod:latest\`" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
          elif [[ "${{ needs.deploy-infinitetalk.result }}" == "skipped" ]]; then
            echo "### ⏭️ InfiniteTalk" >> $GITHUB_STEP_SUMMARY
            echo "- Status: Skipped (no changes detected)" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
          elif [[ "${{ needs.deploy-infinitetalk.result }}" == "failure" ]]; then
            echo "### ❌ InfiniteTalk" >> $GITHUB_STEP_SUMMARY
            echo "- Status: Failed" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
          fi

          echo "---" >> $GITHUB_STEP_SUMMARY
          echo "**Next Steps:**" >> $GITHUB_STEP_SUMMARY
          echo "1. Go to [RunPod Console](https://www.runpod.io/console/serverless/user/templates)" >> $GITHUB_STEP_SUMMARY
          echo "2. Create or update your serverless templates with the new images" >> $GITHUB_STEP_SUMMARY
          echo "3. Deploy endpoints using the updated templates" >> $GITHUB_STEP_SUMMARY
